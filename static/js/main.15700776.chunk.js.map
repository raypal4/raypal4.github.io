{"version":3,"sources":["assets/profile.jpg","components/globalstyle.js","components/theme.js","components/toggle.js","components/navbar.jsx","components/darkmode.js","pages/homepage.js","pages/about.js","app.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","body","text","background","lightTheme","darkTheme","Toggle","toggleTheme","window","addEventListener","document","getElementById","checked","Fragment","id","className","onChange","type","NavBar","useState","setTheme","mountedComponent","setMountedComponent","setMode","mode","localStorage","setItem","useEffect","localTheme","getItem","DarkMode","themeToggler","themeMode","elems","querySelectorAll","M","Tooltip","init","src","profilePic","alt","onClick","querySelector","classList","toggle","bind","title","link","icon","map","item","index","to","homepage","state","Component","about","App","sideBar","contains","remove","path","exact","component","HomePage","About","ReactDOM","render","StrictMode"],"mappings":"oNAAe,G,MAAA,IAA0B,qC,uBCC5BA,EAAeC,YAAH,0YAEP,qBAAGC,MAAkBC,QAC1B,qBAAGD,MAAkBE,QAMhB,qBAAGF,MAAkBG,cAC1B,qBAAGH,MAAkBE,QAIrB,qBAAGF,MAAkBE,QAIrB,qBAAGF,MAAkBE,QAIrB,qBAAGF,MAAkBE,QCrBrBE,EAAa,CACxBH,KAAM,QACNC,KAAM,QACNC,WAAY,SAEDE,EAAY,CACvBJ,KAAM,QACNC,KAAM,QACNC,WAAY,W,OCoBCG,EA3BA,SAAC,GAA4B,IAA1BN,EAAyB,EAAzBA,MAAOO,EAAkB,EAAlBA,YAQvB,OAPAC,OAAOC,iBAAiB,QAAQ,WAGzBC,SAASC,eAAe,YAAYC,QADhC,QAATZ,KAMA,cAAC,IAAMa,SAAP,UACE,sBAAKC,GAAG,iBAAiBC,UAAU,SAASC,SAAUT,EAAtD,UACE,kCACE,mBAAGQ,UAAU,eAAb,6BACA,uBAAOD,GAAG,WAAWG,KAAK,aAC1B,sBAAMF,UAAU,aAElB,mBAAGA,UAAU,iBAAb,4BCiFOG,EAxFA,WACb,IAKA,ECjBsB,WACtB,MAA0BC,mBAAS,SAAnC,mBAAOnB,EAAP,KAAcoB,EAAd,KACA,EAAgDD,oBAAS,GAAzD,mBAAOE,EAAP,KAAyBC,EAAzB,KAEMC,EAAU,SAACC,GACfhB,OAAOiB,aAAaC,QAAQ,QAASF,GACrCJ,EAASI,IAYX,OALAG,qBAAU,WACR,IAAMC,EAAapB,OAAOiB,aAAaI,QAAQ,SAC/CD,EAAaR,EAASQ,GAAcL,EAAQ,SAC5CD,GAAoB,KACnB,IACI,CAACtB,EATa,WACCuB,EAAV,UAAVvB,EAA4B,OAAkB,UAQnBqB,GDDmBS,GAAhD,mBAAO9B,EAAP,KAAc+B,EAAd,KACMC,GADN,KAC4B,UAAVhC,EAAoBI,EAAaC,GAoBnD,OALAK,SAASD,iBAAiB,oBAAoB,WAC5C,IAAIwB,EAAQvB,SAASwB,iBAAiB,eACtBC,IAAEC,QAAQC,KAAKJ,MAI/B,cAAC,IAAD,CAAejC,MAAOgC,EAAtB,SACE,qCACE,cAAClC,EAAD,IACA,sBAAKiB,UAAU,qBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,qBACEA,UAAU,iBACVuB,IAAKC,EACLC,IAAI,sBAGR,sBAAKzB,UAAU,SAAf,UACE,qBAAKA,UAAU,YAAf,yBACA,qBAAKA,UAAU,eAAf,kCAIN,mBACEA,UAAU,iBACVD,GAAG,UACH2B,QAlDY,WACN/B,SAASgC,cAAc,aAC/BC,UAAUC,OAAO,WAgDUC,K,WAH3B,qBASF,qBAAI9B,UAAU,WAAd,UAhDY,CAClB,CACE+B,MAAO,OACPC,KAAM,IACNC,KAAM,QAER,CACEF,MAAO,QACPC,KAAM,SACNC,KAAM,WAwCaC,KAAI,SAACC,EAAMC,GACtB,OACE,6BACE,eAAC,IAAD,CACEpC,UAAU,aACVqC,GAAIF,EAAKH,KACT,gBAAc,QACd,eAAcG,EAAKJ,MAJrB,UAME,mBAAG/B,UAAU,iBAAb,SAA+BmC,EAAKF,OACpC,sBAAMjC,UAAU,YAAhB,SAA6BmC,EAAKJ,YAR7BK,MAcb,oBACEpC,UAAU,aACV,gBAAc,QACd,eAAa,YAHf,SAKE,cAAC,EAAD,CAAQf,MAAOA,EAAOO,YAAawB,kB,gCEhFlCsB,G,kNANbC,MAAQ,G,4CACR,WACE,OAAO,iD,GAHYC,cCORC,E,4MANbF,MAAQ,G,4CACR,WACE,OAAO,2C,GAHSC,a,OCwBLE,EAtBH,WAQV,OACE,eAAC,IAAM5C,SAAP,WACE,cAAC,EAAD,IACA,uBACEE,UAAU,oBACV0B,QAZsB,WAC1B,IAAMiB,EAAUhD,SAASgC,cAAc,aACnCgB,EAAQf,UAAUgB,SAAS,WAC7BD,EAAQf,UAAUiB,OAAO,WASMf,K,WAF/B,UAIE,cAAC,IAAD,CAAOgB,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,cAAC,IAAD,CAAOH,KAAK,SAASE,UAAWE,WCjBxCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJ1D,SAASC,eAAe,W","file":"static/js/main.15700776.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile.64a59700.jpg\";","import { createGlobalStyle } from \"styled-components\";\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\r\n    transition: all 0.50s linear;\r\n  }\r\n\r\n  .side-bar{\r\n    background: ${({ theme }) => theme.background};\r\n    color: ${({ theme }) => theme.text}\r\n  }\r\n  \r\n  .side-bar #menuBtn{\r\n    color: ${({ theme }) => theme.text}\r\n  }\r\n\r\n  .side-bar .logo-content .logo {\r\n    color: ${({ theme }) => theme.text}\r\n  }\r\n\r\n  .side-bar ul li a {\r\n    color: ${({ theme }) => theme.text}\r\n  }\r\n  `;\r\n","import React, { Component } from \"react\";\r\n\r\nexport const lightTheme = {\r\n  body: \"white\",\r\n  text: \"black\",\r\n  background: \"white\",\r\n};\r\nexport const darkTheme = {\r\n  body: \"black\",\r\n  text: \"white\",\r\n  background: \"#0E1D28\",\r\n};\r\n","import React from \"react\";\r\nimport { func, string } from \"prop-types\";\r\n\r\nconst Toggle = ({ theme, toggleTheme }) => {\r\n  window.addEventListener(\"load\", function () {\r\n    //dom is fully loaded, but maybe waiting on images & css files\r\n    theme == \"dark\"\r\n      ? (document.getElementById(\"switchCB\").checked = true)\r\n      : (document.getElementById(\"switchCB\").checked = false);\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div id=\"darkModeSwitch\" className=\"switch\" onChange={toggleTheme}>\r\n        <label>\r\n          <p className=\"display-none\">Dark Mode Label</p>\r\n          <input id=\"switchCB\" type=\"checkbox\"></input>\r\n          <span className=\"lever\"></span>\r\n        </label>\r\n        <i className=\"material-icons\">wb_sunny</i>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nToggle.propTypes = {\r\n  theme: string.isRequired,\r\n  toggleTheme: func.isRequired,\r\n};\r\n\r\nexport default Toggle;\r\n","import React, { Component } from \"react\";\r\nimport M from \"materialize-css\";\r\nimport \"../css/app.css\";\r\nimport profilePic from \"../assets/profile.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyles } from \"./globalstyle.js\";\r\nimport { lightTheme, darkTheme } from \"./theme.js\";\r\nimport { DarkMode } from \"./darkmode.js\";\r\nimport Toggle from \"./toggle.js\";\r\n\r\nconst NavBar = () => {\r\n  const menuButtonClick = () => {\r\n    const sideBar = document.querySelector(\".side-bar\");\r\n    sideBar.classList.toggle(\"active\");\r\n  };\r\n\r\n  const [theme, themeToggler, mountedComponent] = DarkMode();\r\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\r\n\r\n  const NavBarLinks = [\r\n    {\r\n      title: \"Home\",\r\n      link: \"/\",\r\n      icon: \"home\",\r\n    },\r\n    {\r\n      title: \"About\",\r\n      link: \"/about\",\r\n      icon: \"person\",\r\n    },\r\n  ];\r\n\r\n  document.addEventListener(\"DOMContentLoaded\", function () {\r\n    var elems = document.querySelectorAll(\".tooltipped\");\r\n    var instances = M.Tooltip.init(elems);\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={themeMode}>\r\n      <>\r\n        <GlobalStyles />\r\n        <div className=\"side-bar z-depth-1\">\r\n          <div className=\"logo-content\">\r\n            <div className=\"logo\">\r\n              <div className=\"row\">\r\n                <div className=\"col s4\">\r\n                  <img\r\n                    className=\"responsive-img\"\r\n                    src={profilePic}\r\n                    alt=\"Profile Picture\"\r\n                  ></img>\r\n                </div>\r\n                <div className=\"col s8\">\r\n                  <div className=\"logo-name\">Raynold Tan</div>\r\n                  <div className=\"logo-subtext\">SE Developer</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <i\r\n              className=\"material-icons\"\r\n              id=\"menuBtn\"\r\n              onClick={menuButtonClick.bind(this)}\r\n            >\r\n              menu\r\n            </i>\r\n          </div>\r\n\r\n          <ul className=\"nav-list\">\r\n            {NavBarLinks.map((item, index) => {\r\n              return (\r\n                <li key={index}>\r\n                  <Link\r\n                    className=\"tooltipped\"\r\n                    to={item.link}\r\n                    data-position=\"right\"\r\n                    data-tooltip={item.title}\r\n                  >\r\n                    <i className=\"material-icons\">{item.icon}</i>\r\n                    <span className=\"link-name\">{item.title}</span>\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n\r\n            <li\r\n              className=\"tooltipped\"\r\n              data-position=\"right\"\r\n              data-tooltip=\"Dark Mode\"\r\n            >\r\n              <Toggle theme={theme} toggleTheme={themeToggler} />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { useEffect, useState } from \"react\";\r\nexport const DarkMode = () => {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [mountedComponent, setMountedComponent] = useState(false);\r\n\r\n  const setMode = (mode) => {\r\n    window.localStorage.setItem(\"theme\", mode);\r\n    setTheme(mode);\r\n  };\r\n\r\n  const themeToggler = () => {\r\n    theme === \"light\" ? setMode(\"dark\") : setMode(\"light\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const localTheme = window.localStorage.getItem(\"theme\");\r\n    localTheme ? setTheme(localTheme) : setMode(\"light\");\r\n    setMountedComponent(true);\r\n  }, []);\r\n  return [theme, themeToggler, mountedComponent];\r\n};\r\n","import React, { Component } from \"react\";\r\nimport M from \"materialize-css\";\r\nimport \"../css/homepage.css\";\r\n\r\nclass homepage extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>Hello world</h1>;\r\n  }\r\n}\r\n\r\nexport default homepage;\r\n","import React, { Component } from \"react\";\r\nimport M from \"materialize-css\";\r\nimport NavBar from \"../components/navbar.jsx\";\r\n\r\nclass about extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>About</h1>;\r\n  }\r\n}\r\n\r\nexport default about;\r\n","import React, { useState, Component } from \"react\";\r\nimport NavBar from \"./components/navbar\";\r\nimport HomePage from \"./pages/homepage\";\r\nimport About from \"./pages/about\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n  const menuButtonClickMain = () => {\r\n    const sideBar = document.querySelector(\".side-bar\");\r\n    if (sideBar.classList.contains(\"active\")) {\r\n      sideBar.classList.remove(\"active\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavBar />\r\n      <main\r\n        className=\"content-container\"\r\n        onClick={menuButtonClickMain.bind(this)}\r\n      >\r\n        <Route path=\"/\" exact component={HomePage}></Route>\r\n        <Route path=\"/about\" component={About}></Route>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}